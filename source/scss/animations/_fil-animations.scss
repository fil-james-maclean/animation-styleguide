
/**
 * @extended as a default into animations
 */
.anim-fill-both {
  animation-fill-mode: both;
}
$animation-perspective: 1200px;
/**
 * timings
 * easings
 * bases
 * entrance
 * exit
 * emphasis
 * execute
 */
/**
 * Animation Timings classes
 * Start with these, timings and deviate to fine tune.
 */

 /**
  * Minimal set of 8 should cover most UI animations
  */
//  $timings: (
//   200,
//   300,
//   500,
//   700,
//  1000,
//  1500,
//  2000,
//  4000,
// );
//
// @each $speed in $timings {
//      .duration-#{$speed} {
//          animation-duration: #{$speed}ms ;
//      }
//  }

/**
 * Extended set for fine tuning and bespoke animations.
 */
@for $i from 1 through 40 {

   .delay-#{ $i * 100 } {
       animation-delay: #{ $i * 100 }ms;
   }
   //
  //  .anim-delay:nth-of-type( #{ $i } ) {
  //      animation-delay: #{ $i * 200 }ms;
  //  }

   .dur-#{ $i * 100 } {
       animation-duration: #{ $i * 100 }ms;
   }

}


/**
 * Easings
 *
 */

$easein-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53);
$easeout-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
// $easein-back: cubic-bezier(.57, .07, .6, 1.71);
// $easeout-back: cubic-bezier(0.175, 0.885, 0.32, 1.275);
//custom
$easein-back:cubic-bezier(0.78,-0.21,0.84,0.78);
$easeout-back:cubic-bezier(0.36, 0.51, 0.54, 1.16);

.entrance {
 animation-timing-function: $easeout-quad;
}
.exit {
 animation-timing-function: $easein-quad;
}
.emphasis {
 animation-timing-function: $easeout-back;
}
.execute {
 animation-timing-function: $easein-back;
}



// Entrances
.is-hidden {
  opacity: 0;
  pointer-events: none;
}
// fadein
@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.fadeIn {
  animation-name: fadeIn;
  animation-fill-mode: both;
  animation-timing-function: ease;
}

// fadein-scaleup
@keyframes fadeInScaleUp {
  from {
    opacity: 0;
    transform: translate3d(0, 20%, 0) scale(0.8, 0.8);
  }

  to {
    opacity: 1;
    transform: none;
  }
}
  // transition: transform 300ms ease, opacity 200ms ease;
.fadeInScaleUp {
   animation-name: fadeInScaleUp;
   animation-fill-mode: both;
   animation-timing-function: $easeout-back;
}

@keyframes fadeInScaleDown {
  from {
    opacity: 0;
    transform: translate3d(0, -10%, 0) scale(1.1, 1.1);
  }

  to {
    opacity: 1;
    transform: none;
  }
}
  // transition: transform 300ms ease, opacity 200ms ease;
.fadeInScaleDown {
   animation-name: fadeInScaleDown;
   animation-fill-mode: both;
   animation-timing-function: $easeout-back;
}

// fadein-moveUp

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translate3d(0, 20%, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInUp {
  animation-name: fadeInUp;
  animation-fill-mode: both;
  animation-timing-function: $easeout-back;
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translate3d(0, -20%, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInDown {
  animation-name: fadeInDown;
  animation-fill-mode: both;
  animation-timing-function: $easeout-back;
}


// fadein-moveleft

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translate3d(30%, 0, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInLeft {
  animation-name: fadeInLeft;
  animation-fill-mode: both;
  animation-timing-function: $easeout-back;
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translate3d(-30%, 0, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

.fadeInRight {
  animation-name: fadeInRight;
  animation-fill-mode: both;
  animation-timing-function: $easeout-back;
}

@keyframes flipUp90  {
  from {
    // transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    transform: perspective($animation-perspective) translateY( 40% ) rotateX( -90deg );
    opacity: 0;
  }


  to {
    // transform: perspective(400px) rotate3d(1, 0, 0, 0deg);
    transform: perspective($animation-perspective) translateY( 0 ) rotateX( 0deg );
    opacity: 1;
  }
}
.parent-perspective {
  perspective: $animation-perspective;
}
.flipUp90 {
  backface-visibility: hidden !important;
  animation-name: flipUp90 ;
  animation-timing-function: ease;
  animation-fill-mode: both;
}


@keyframes flipDown90  {
  from {
    // transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    transform: perspective($animation-perspective) translateY( -40% ) rotateX( 90deg );
    opacity: 0;
  }


  to {
    // transform: perspective(400px) rotate3d(1, 0, 0, 0deg);
    transform: perspective($animation-perspective) translateY( 0 ) rotateX( 0deg );
    opacity: 1;
  }
}
.parent-perspective {
  perspective: $animation-perspective;
}
.flipDown90 {
  backface-visibility: hidden !important;
  animation-name: flipDown90 ;
  animation-timing-function: ease;
  animation-fill-mode: both;
  &.reverse {
    animation-direction: reverse;
  }
}



// Exits

@keyframes fadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

.fadeOut {
  animation-name: fadeOut;
  animation-fill-mode: both;
  animation-timing-function: ease;
}


@keyframes fadeOutScaleDown {
  from {
    opacity: 1;
    transform: none;
  }

  to {
    opacity: 0;
    transform: translate3d(0, 20%, 0) scale(0.8, 0.8);
  }
}

.fadeOutScaleDown {
   animation-name: fadeOutScaleDown;
   animation-fill-mode: both;
   animation-timing-function: $easein-back;
}

@keyframes fadeOutScaleUp {
  from {
    opacity: 1;
    transform: none;
  }

  to {
    opacity: 0;
    transform: translate3d(0, -20%, 0) scale(1.1, 1.1);
  }
}

.fadeOutScaleUp {
   animation-name: fadeOutScaleUp;
   animation-fill-mode: both;
   animation-timing-function: $easein-back;
}

@keyframes fadeOutUp {
  from {
    opacity: 1;
    transform: none;
  }

  to {
    opacity: 0;
    transform: translate3d(0, -20%, 0);

  }
}

.fadeOutUp {
  animation-name: fadeOutUp;
  animation-fill-mode: both;
  animation-timing-function: $easein-back;
}

@keyframes fadeOutDown {
  from {
    opacity: 1;
    transform: none;
  }

  to {
    opacity: 0;
    transform: translate3d(0, 20%, 0);

  }
}

.fadeOutDown {
  animation-name: fadeOutDown;
  animation-fill-mode: both;
  animation-timing-function: $easein-back;
}


@keyframes fadeOutLeft {
  from {
    opacity: 1;
    transform: none;
  }

  to {
    opacity: 0;
    transform: translate3d(-30%, 0, 0);

  }
}

.fadeOutLeft {
  animation-name: fadeOutLeft;
  animation-fill-mode: both;
  animation-timing-function: $easein-back;
}

@keyframes fadeOutRight {
  from {
    opacity: 1;
    transform: none;
  }

  to {
    opacity: 0;
    transform: translate3d(30%, 0, 0);

  }
}

.fadeOutRight {
  animation-name: fadeOutRight;
  animation-fill-mode: both;
  animation-timing-function: $easein-back;
}


@keyframes flipOutUp90  {
  from {

    transform: perspective($animation-perspective) translateY( 0 ) rotateX( 0deg );
    opacity: 1;
  }

  to {
    transform: perspective($animation-perspective) translateY( -40% ) rotateX( 90deg );
    opacity: 0;
  }
}

.flipOutUp90 {
  backface-visibility: hidden !important;
  animation-name: flipOutUp90 ;
  animation-timing-function: ease;
  animation-fill-mode: both;
}


@keyframes flipOutDown90  {
  from {
    transform: perspective($animation-perspective) translateY( 0 ) rotateX( 0deg );
    opacity: 1;
  }


  to {
    transform: perspective($animation-perspective) translateY( 40% ) rotateX( -90deg );
    opacity: 0;
  }
}
.parent-perspective {
  perspective: $animation-perspective;
}
.flipOutDown90 {
  backface-visibility: hidden !important;
  animation-name: flipOutDown90 ;
  animation-timing-function: ease;
  animation-fill-mode: both;
}


/**
* ====== Card flip Execute =======
*/

.container3d {
  position: relative;
  perspective: $animation-perspective;
}

.card {
  width: 100%;
  height: 100%;
  position: absolute;
  transform-style: preserve-3d;
}

.card--front,
.card--back {
   margin: 0;
   display: block;
   position: absolute;
   width: 100%;
   height: 100%;
   backface-visibility: hidden;

}

.card--back {
  transform: rotateY( 180deg );

}

@keyframes flipLeft180  {
  from {
    transform: translateZ( 0 ) translateX( 0 ) rotateY( 0deg );
  }

  45% {
    transform: translateZ( 50px ) translateX( 60% ) rotateY( -90deg );
  }

  to {
    transform: translateZ( 0 ) translateX( 0 ) rotateY( -180deg );

  }
}

.parent-perspective {
  perspective: $animation-perspective;
}

.flipLeft180 {
  animation-name: flipLeft180 ;
  animation-timing-function: linear;
  animation-fill-mode: both;
}

@keyframes flipRight180  {
  from {
    transform: translateZ( 0 ) translateX( 0 ) rotateY( -180deg );
  }

  60% {
    transform: translateZ( 50px ) translateX( -30% ) rotateY( -90deg );
  }

  to {
    transform: translateZ( 0 ) translateX( 0 ) rotateY( 0deg );

  }
}

.flipRight180 {
  animation-name: flipRight180 ;
  animation-timing-function: linear;
  animation-fill-mode: both;
}



/**
* Enphasis
*/

@keyframes PulseScale {
  from {
    transform: scale3d(1, 1, 1);
  }

  25% {
    transform: scale3d(0.8, 0.8, 0.8);
  }

  // 35% {
  //   transform: scale3d(1.10, 1.10, 1.10);
  // }

  // 45% {
  //   transform: scale3d(1, 1, 1);
  // }

  50% {
    transform: scale3d(1.15, 1.15, 1.15);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}

.PulseScale {
  animation-name: PulseScale;
  // animation-timing-function: linear;
  animation-fill-mode: both;
}


@keyframes PulseOutline {

  from {
    transform: scale3d(1, 1, 1);
    animation-timing-function: ease-out;

  }

  50% {
    transform: scale3d(0.8, 0.8, 0.8);
    // animation-timing-function: ease-in;
  }

  55% {
    transform: scale3d(1, 1, 1);
    // outline-width: 1px;
    // // outline-style: solid;
    // // outline-color: $grey60;
    // // outline-offset: 2px;
    // animation-timing-function: step-start;
  }
  60% {
    transform: scale3d(1, 1, 1);
    outline-width: 2px;
    outline-style: solid;
    outline-color: $grey60;
    outline-offset: 6px;
    animation-timing-function: step-start;
  }
  65% {
    transform: scale3d(1, 1, 1);
    outline-width: 2px;
    outline-style: solid;
    outline-color: $grey60;
    outline-offset: 12px;
    // animation-timing-function: step-start;
  }
  70% {
    transform: scale3d(1, 1, 1);
    outline-width: 2px;
    outline-style: solid;
    outline-color: $grey60;
    outline-offset: 24px;
    // animation-timing-function: step-start;
  }
  75% {
    transform: scale3d(1, 1, 1);
    outline-width: 2px;
    outline-style: solid;
    outline-color: $grey60;
    outline-offset: 32px;
    // animation-timing-function: step-start;
  }
  80% {
    transform: scale3d(1, 1, 1);
    outline-width: 2px;
    outline-style: solid;
    outline-color: $grey60;
    outline-offset: 26px;
    // animation-timing-function: step-start;
  }
  90% {
    transform: scale3d(1, 1, 1);
    outline-width: 2px;
    outline-style: solid;
    outline-color: $grey60;
    outline-offset: 8px;
    // animation-timing-function: step-start;
  }

  to {
    transform: scale3d(1, 1, 1);
    outline-width: 0px;
    outline-style: none;;
    outline-color: $grey60;
    outline-offset: 0px;
    animation-timing-function: step-end;

  }

}

.PulseOutline {
  animation-name: PulseOutline;

  animation-fill-mode: both;
}

@keyframes shake {
  from, to {
    transform: translate3d(0, 0, 0);
  }

  10%, 30%, 50%, 70%, 90% {
    transform: translate3d(-10px, 0, 0);
  }

  20%, 40%, 60%, 80% {
    transform: translate3d(10px, 0, 0);
  }
}

.shake {
  animation-name: shake;
  animation-timing-function: linear;
  animation-fill-mode: both;
}


.Spotlight {
  z-index: 50;
  position: relative;
  box-shadow: 0px 4px 40px 0px rgba(0,0,0,0.2);
}
